from envoy_schema.server.schema import uri
from envoy_schema.server.schema.sep2.function_set_assignments import (
    FunctionSetAssignmentsListResponse,
    FunctionSetAssignmentsResponse,
)
from envoy_schema.server.schema.sep2.identification import Link, ListLink

from envoy.server.api.request import RequestStateParameters
from envoy.server.mapper.common import generate_href, generate_mrid

# Function set assignments are virtual i.e. there are no corresponding tables in the database
# We use the generate_mrid function to create a fake mRID and use FUNCTION_SET_ASSIGNMENTS_MRID_PREFIX
# to prevent clashes with mRIDs generated by the same function in order function sets.
FUNCTION_SET_ASSIGNMENTS_MRID_PREFIX = int("F5A", 16)


class FunctionSetAssignmentsMapper:
    @staticmethod
    def map_to_response(
        rs_params: RequestStateParameters, fsa_id: int, site_id: int, doe_count: int, tariff_count: int
    ) -> FunctionSetAssignmentsResponse:
        return FunctionSetAssignmentsResponse.validate(
            {
                "href": generate_href(
                    uri.FunctionSetAssignmentsUri,
                    rs_params,
                    fsa_id=fsa_id,
                    site_id=site_id,
                ),
                "mRID": generate_mrid(FUNCTION_SET_ASSIGNMENTS_MRID_PREFIX, fsa_id, site_id),
                "description": "",
                "TimeLink": Link(href=generate_href(uri.TimeUri, rs_params)),
                "TariffProfileListLink": ListLink(
                    href=generate_href(uri.TariffProfileListUri, rs_params, site_id=site_id), all_=tariff_count
                ),
                "DERProgramListLink": ListLink(
                    href=generate_href(uri.DERProgramListUri, rs_params, site_id=site_id), all_=doe_count
                ),
            }
        )

    @staticmethod
    def map_to_list_response(
        rs_params: RequestStateParameters, function_set_assignments: list[FunctionSetAssignmentsResponse], site_id: int
    ) -> FunctionSetAssignmentsListResponse:
        return FunctionSetAssignmentsListResponse.validate(
            {
                "href": generate_href(uri.FunctionSetAssignmentsListUri, rs_params, site_id=site_id),
                "all_": 1,
                "results": 1,
                "FunctionSetAssignments": function_set_assignments,
            }
        )
